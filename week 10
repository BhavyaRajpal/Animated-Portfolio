{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyO3SC+hBBy5Jd1vsUpof/eS",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/BhavyaRajpal/rishy-s-website/blob/master/week%2010\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "week 10 1-i"
      ],
      "metadata": {
        "id": "d6AduYfGZeuK"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZsUkG5pcZRl7",
        "outputId": "fd1f31ea-9e21-46ce-d517-ad0cde000767"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1.414213562373095048801688724209698078569671875376948073176679737990732478462107038850387534327641573\n"
          ]
        }
      ],
      "source": [
        "import mpmath\n",
        "\n",
        "mpmath.mp.dps = 100 # Set the precision to 100 decimal places\n",
        "sqrt_2 = mpmath.sqrt(2)\n",
        "print(sqrt_2)"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "1-ii\n"
      ],
      "metadata": {
        "id": "2OFXUofwZTjC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import sympy\n",
        "one_half = sympy.Rational(1, 2)\n",
        "one_third = sympy.Rational(1, 3)\n",
        "result = one_half + one_third\n",
        "print(result)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Sa43O_HvZlmR",
        "outputId": "3c55fa2e-034d-477c-e7f3-0a5017e34373"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "5/6\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "1-iii"
      ],
      "metadata": {
        "id": "-RTjxws8Zmfz"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "import sympy\n",
        "x, y = sympy.symbols('x y')\n",
        "expanded = sympy.expand((x+y)**6)\n",
        "print(expanded)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "itxWHwYWZpQ5",
        "outputId": "dbc1306b-1cc9-4186-9016-72d71051e4dd"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "x**6 + 6*x**5*y + 15*x**4*y**2 + 20*x**3*y**3 + 15*x**2*y**4 + 6*x*y**5 + y**6\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "1-iv"
      ],
      "metadata": {
        "id": "Sd1ePdrbc8Cq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import sympy\n",
        "x = sympy.symbols('x')\n",
        "simplified = sympy.tan(x)\n",
        "print(simplified)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NSkuoiHpdCkG",
        "outputId": "c3a4634f-6deb-42af-f89f-087eb6d96cd4"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "tan(x)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "1-v"
      ],
      "metadata": {
        "id": "y9o0aPkyc_Y-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import sympy as sp\n",
        "\n",
        "x, n = sp.symbols('x n')\n",
        "expr = sp.sin(x) - x*(x**(3*n))\n",
        "simplified_expr = sp.simplify(expr)\n",
        "print(simplified_expr)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-y4bW08rdBOt",
        "outputId": "c159567c-abf3-4635-aa5b-b51c2ebf7105"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-x**(3*n + 1) + sin(x)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "week 10-2"
      ],
      "metadata": {
        "id": "dSTjl2TYaQH2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import sympy\n",
        "\n",
        "\n",
        "a, b = sympy.symbols('a b')\n",
        "\n",
        "expr = a**2 - a*b + a*b - b**2\n",
        "\n",
        "simplified_expr = sympy.simplify(expr - (a**2 - b**2))\n",
        "\n",
        "print(simplified_expr)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wkrI5GqWaRlW",
        "outputId": "fdd6a5e6-1542-4611-aaf7-4c1cbc0032d1"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "week 10-3"
      ],
      "metadata": {
        "id": "rczjB4uhaiG6"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "a"
      ],
      "metadata": {
        "id": "db9HnOVpa2lz"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import sympy\n",
        "\n",
        "\n",
        "a = sympy.symbols('a')\n",
        "\n",
        "expr = a**2\n",
        "\n",
        "double_integral = sympy.integrate(sympy.integrate(expr, (a, 0, 1)), (a, 0, 1))\n",
        "\n",
        "print(double_integral)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "61DsV4PSamYD",
        "outputId": "a747721d-55ae-4faf-a2d6-699e85d943ae"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/3\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "b"
      ],
      "metadata": {
        "id": "xbej4OJIbAxH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import sympy\n",
        "\n",
        "x, y = sympy.symbols('x y')\n",
        "\n",
        "\n",
        "expr = 2*x + y\n",
        "\n",
        "\n",
        "result = expr.subs({x: 3, y: 4})\n",
        "\n",
        "\n",
        "print(result)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ysl9-F1ybBiE",
        "outputId": "7149aaef-b5e6-4601-c4e3-e63cad9d9b14"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "10\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "c"
      ],
      "metadata": {
        "id": "Wvk7Fj5gbTCH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import sympy\n",
        "\n",
        "\n",
        "frac1 = sympy.Rational(1, 10)\n",
        "frac2 = sympy.Rational(1, 5)\n",
        "\n",
        "\n",
        "result = frac1 + frac2\n",
        "\n",
        "print(result)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FuGxxdTubYBq",
        "outputId": "c2c0e8d9-06b7-4439-8148-93b58085485d"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "3/10\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "d"
      ],
      "metadata": {
        "id": "UXVat7TAbuKT"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import sympy\n",
        "\n",
        "\n",
        "x = sympy.symbols('x')\n",
        "\n",
        "\n",
        "expr = sympy.sin(x)\n",
        "\n",
        "derivative = sympy.diff(expr, x)\n",
        "\n",
        "\n",
        "print(derivative)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SJLynYpQbwxO",
        "outputId": "76f8d36d-c439-4209-e843-2d184db413de"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "cos(x)\n"
          ]
        }
      ]
    }
  ]
}